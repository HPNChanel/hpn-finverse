"""add_loan_simulation_tables

Revision ID: 35b5471ac6ce
Revises: add_fin_acct_savings
Create Date: 2025-06-18 20:27:16.621556

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '35b5471ac6ce'
down_revision: Union[str, None] = 'add_fin_acct_savings'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('loans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('loan_name', sa.String(length=200), nullable=False),
    sa.Column('loan_type', sa.Enum('PERSONAL', 'MORTGAGE', 'EDUCATION', 'BUSINESS', 'AUTO', 'HOME_IMPROVEMENT', 'CREDIT_CARD', 'OTHER', name='loantype'), nullable=False),
    sa.Column('purpose', sa.String(length=500), nullable=True),
    sa.Column('principal_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('current_balance', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('interest_rate', sa.Numeric(precision=8, scale=4), nullable=False),
    sa.Column('interest_type', sa.Enum('FIXED', 'VARIABLE', 'HYBRID', name='interesttype'), nullable=False),
    sa.Column('variable_rate_adjustment_frequency', sa.Integer(), nullable=True),
    sa.Column('hybrid_fixed_period', sa.Integer(), nullable=True),
    sa.Column('loan_term_months', sa.Integer(), nullable=False),
    sa.Column('repayment_frequency', sa.Enum('MONTHLY', 'QUARTERLY', 'SEMI_ANNUALLY', 'ANNUALLY', name='repaymentfrequency'), nullable=False),
    sa.Column('amortization_type', sa.Enum('REDUCING_BALANCE', 'FLAT_RATE', 'BULLET_PAYMENT', name='amortizationtype'), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('maturity_date', sa.Date(), nullable=False),
    sa.Column('emi_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('total_interest', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('total_payment', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('status', sa.Enum('SIMULATED', 'ACTIVE', 'COMPLETED', 'DEFAULTED', 'CANCELLED', name='loanstatus'), nullable=False),
    sa.Column('is_simulation', sa.Boolean(), nullable=False),
    sa.Column('payments_made', sa.Integer(), nullable=False),
    sa.Column('last_payment_date', sa.Date(), nullable=True),
    sa.Column('next_payment_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('simulation_uuid', sa.String(length=36), nullable=False),
    sa.Column('additional_config', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('loans', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_loans_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_loans_user_id'), ['user_id'], unique=False)

    op.create_table('loan_repayment_schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('loan_id', sa.Integer(), nullable=False),
    sa.Column('installment_number', sa.Integer(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('installment_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('principal_component', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('interest_component', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('opening_balance', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('closing_balance', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('is_paid', sa.Boolean(), nullable=False),
    sa.Column('paid_date', sa.Date(), nullable=True),
    sa.Column('paid_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('is_overdue', sa.Boolean(), nullable=False),
    sa.Column('days_overdue', sa.Integer(), nullable=True),
    sa.Column('late_fee', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['loan_id'], ['loans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('loan_repayment_schedules', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_loan_repayment_schedules_due_date'), ['due_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_loan_repayment_schedules_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_loan_repayment_schedules_loan_id'), ['loan_id'], unique=False)

    op.create_table('loan_payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('loan_id', sa.Integer(), nullable=False),
    sa.Column('schedule_id', sa.Integer(), nullable=True),
    sa.Column('payment_date', sa.Date(), nullable=False),
    sa.Column('payment_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('payment_type', sa.String(length=50), nullable=False),
    sa.Column('principal_paid', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('interest_paid', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('late_fee_paid', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('payment_method', sa.String(length=100), nullable=True),
    sa.Column('payment_reference', sa.String(length=200), nullable=True),
    sa.Column('is_simulated', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['loan_id'], ['loans.id'], ),
    sa.ForeignKeyConstraint(['schedule_id'], ['loan_repayment_schedules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('loan_payments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_loan_payments_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_loan_payments_loan_id'), ['loan_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_loan_payments_payment_date'), ['payment_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_loan_payments_schedule_id'), ['schedule_id'], unique=False)

    with op.batch_alter_table('internal_transfers', schema=None) as batch_op:
        batch_op.drop_index('ix_internal_transfers_from_address')
        batch_op.drop_index('ix_internal_transfers_id')
        batch_op.drop_index('ix_internal_transfers_to_address')
        batch_op.drop_index('ix_internal_transfers_tx_hash')

    op.drop_table('internal_transfers')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('internal_transfers',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('from_address', mysql.VARCHAR(length=42), nullable=False),
    sa.Column('to_address', mysql.VARCHAR(length=42), nullable=False),
    sa.Column('amount_eth', mysql.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('tx_hash', mysql.VARCHAR(length=66), nullable=True),
    sa.Column('gas_used', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('gas_price', mysql.VARCHAR(length=30), nullable=True),
    sa.Column('status', mysql.VARCHAR(length=20), nullable=False),
    sa.Column('notes', mysql.TEXT(), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('internal_transfers', schema=None) as batch_op:
        batch_op.create_index('ix_internal_transfers_tx_hash', ['tx_hash'], unique=False)
        batch_op.create_index('ix_internal_transfers_to_address', ['to_address'], unique=False)
        batch_op.create_index('ix_internal_transfers_id', ['id'], unique=False)
        batch_op.create_index('ix_internal_transfers_from_address', ['from_address'], unique=False)

    with op.batch_alter_table('loan_payments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_loan_payments_schedule_id'))
        batch_op.drop_index(batch_op.f('ix_loan_payments_payment_date'))
        batch_op.drop_index(batch_op.f('ix_loan_payments_loan_id'))
        batch_op.drop_index(batch_op.f('ix_loan_payments_id'))

    op.drop_table('loan_payments')
    with op.batch_alter_table('loan_repayment_schedules', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_loan_repayment_schedules_loan_id'))
        batch_op.drop_index(batch_op.f('ix_loan_repayment_schedules_id'))
        batch_op.drop_index(batch_op.f('ix_loan_repayment_schedules_due_date'))

    op.drop_table('loan_repayment_schedules')
    with op.batch_alter_table('loans', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_loans_user_id'))
        batch_op.drop_index(batch_op.f('ix_loans_id'))

    op.drop_table('loans')
    # ### end Alembic commands ###
